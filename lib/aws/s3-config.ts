/**
 * Centralized S3 Configuration
 * Single source of truth for all S3 bucket names and settings
 */

export const S3_BUCKETS = {
  // Content images (generated by Nova Canvas, user uploads, etc.)
  CONTENT_IMAGES: process.env.S3_IMAGE_BUCKET || 'patchline-files-us-east-1',
  
  // Documents bucket (for document processing)
  DOCUMENTS: process.env.S3_DOCUMENTS_BUCKET || 'patchline-documents-staging',
  
  // Email knowledge base
  EMAIL_KNOWLEDGE: process.env.S3_EMAIL_BUCKET || 'patchline-email-knowledge-base',
  
  // Agent schemas
  AGENT_SCHEMAS: process.env.S3_AGENT_BUCKET || 'patchline-agent-schemas',
  
  // Default region
  DEFAULT_REGION: process.env.S3_REGION || process.env.AWS_REGION || 'us-east-1'
} as const

export const S3_PATHS = {
  // Path prefixes for different content types
  GENERATED_CONTENT: 'generated',
  USER_UPLOADS: 'uploads',
  PROFILE_IMAGES: 'profiles',
  RELEASE_ARTWORK: 'releases',
  MARKETING_CONTENT: 'marketing',
  TEMP_FILES: 'temp'
} as const

export const S3_SETTINGS = {
  // Maximum file sizes
  MAX_IMAGE_SIZE: 10 * 1024 * 1024, // 10MB
  MAX_DOCUMENT_SIZE: 50 * 1024 * 1024, // 50MB
  
  // Allowed image types
  ALLOWED_IMAGE_TYPES: ['image/jpeg', 'image/png', 'image/webp', 'image/gif'],
  
  // URL expiration for signed URLs (in seconds)
  SIGNED_URL_EXPIRY: 3600, // 1 hour
  
  // Public read ACL (use carefully)
  PUBLIC_READ_ACL: 'public-read' as const,
  PRIVATE_ACL: 'private' as const
} as const

// Helper to get full S3 path
export function getS3Path(bucket: keyof typeof S3_BUCKETS, ...pathParts: string[]): string {
  return pathParts.filter(Boolean).join('/')
}

// Helper to get bucket name
export function getBucketName(bucketKey: keyof typeof S3_BUCKETS): string {
  return S3_BUCKETS[bucketKey]
} 